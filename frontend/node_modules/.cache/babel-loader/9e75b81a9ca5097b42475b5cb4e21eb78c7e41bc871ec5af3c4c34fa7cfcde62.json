{"ast":null,"code":"var _jsxFileName = \"/Users/abhaysingh/Spare-Parts-Management-System/frontend/src/components/service-center/GetInfoFromServiceCenter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceCenterInfo = () => {\n  _s();\n  const [serviceCenterInfo, setServiceCenterInfo] = useState([]);\n  const [showInfo, setShowInfo] = useState(false);\n  useEffect(() => {\n    if (showInfo) {\n      async function fetchServiceCenterInfo() {\n        try {\n          const response = await axios.get('http://localhost:8080/v1/spareParts/ServiceCenter.json');\n          setServiceCenterInfo(response.data.serviceCenterList);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n      fetchServiceCenterInfo();\n    }\n  }, [showInfo]);\n  const handleToggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Service Center Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleInfo,\n      children: showInfo ? 'Hide Info' : 'Show Info'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: serviceCenterInfo.map((center, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Service Center \", center.serviceCenterId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Zone ID: \", center.zoneId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Spare Parts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(center.sparePartsInServiceCenter).map(partName => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [partName, \": \", center.sparePartsInServiceCenter[partName]]\n          }, partName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceCenterInfo, \"CGcxgzWQ4123ASt0VNuulDMfVqs=\");\n_c = ServiceCenterInfo;\nexport default ServiceCenterInfo;\nvar _c;\n$RefreshReg$(_c, \"ServiceCenterInfo\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ServiceCenterInfo","_s","serviceCenterInfo","setServiceCenterInfo","showInfo","setShowInfo","fetchServiceCenterInfo","response","get","data","serviceCenterList","error","console","handleToggleInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","center","index","serviceCenterId","zoneId","Object","keys","sparePartsInServiceCenter","partName","_c","$RefreshReg$"],"sources":["/Users/abhaysingh/Spare-Parts-Management-System/frontend/src/components/service-center/GetInfoFromServiceCenter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ServiceCenterInfo = () => {\n  const [serviceCenterInfo, setServiceCenterInfo] = useState([]);\n  const [showInfo, setShowInfo] = useState(false);\n\n  useEffect(() => {\n    if (showInfo) {\n      async function fetchServiceCenterInfo() {\n        try {\n          const response = await axios.get('http://localhost:8080/v1/spareParts/ServiceCenter.json');\n          setServiceCenterInfo(response.data.serviceCenterList);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      fetchServiceCenterInfo();\n    }\n  }, [showInfo]);\n\n  const handleToggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n\n  return (\n    <div>\n      <h2>Service Center Information</h2>\n      <button onClick={handleToggleInfo}>\n        {showInfo ? 'Hide Info' : 'Show Info'}\n      </button>\n      {showInfo && (\n        <div>\n          {serviceCenterInfo.map((center, index) => (\n            <div key={index}>\n              <h3>Service Center {center.serviceCenterId}</h3>\n              <p>Zone ID: {center.zoneId}</p>\n              <p>Spare Parts:</p>\n              <ul>\n                {Object.keys(center.sparePartsInServiceCenter).map((partName) => (\n                  <li key={partName}>\n                    {partName}: {center.sparePartsInServiceCenter[partName]}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ServiceCenterInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}